name: Build, Push, and Deploy Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: read
  #     contents: read
    
  #   steps:
  #     - name: Deploy to server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SERVER_PORT || 22 }}
  #         envs: GITHUB_TOKEN
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           set -e
  #           echo "=== Starting deployment at $(date) ==="
            
  #           echo "Changing to project directory..."
  #           cd /path/to/danbot
            
  #           echo "Logging into GitHub Container Registry..."
  #           echo $GITHUB_TOKEN | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
  #           echo "Pulling latest image..."
  #           docker-compose -f docker-compose.prod.yml pull danbot
            
  #           echo "Restarting container..."
  #           docker-compose -f docker-compose.prod.yml up -d --no-deps danbot
            
  #           echo "Cleaning up old images..."
  #           docker image prune -f
            
  #           echo "Getting container status..."
  #           docker ps | grep danbot
            
  #           echo "=== Deployment completed at $(date) ===" 